---
- name: Install required dependencies for HTTPS transport and keyring
  apt:
    name:
      - curl
      - gnupg2
      - ca-certificates
      - lsb-release
      - ubuntu-keyring
    state: present
    update_cache: true

- name: Add official NGINX signing key
  shell: curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor | tee /usr/share/keyrings/nginx-archive-keyring.gpg > /dev/null
  args:
    creates: /usr/share/keyrings/nginx-archive-keyring.gpg

- name: Add official NGINX repository
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] http://nginx.org/packages/ubuntu {{ ansible_distribution_release | lower }} nginx"
    state: present
    filename: nginx

- name: Install NGINX
  ansible.builtin.apt:
    name: nginx
    state: present
    update_cache: true

- name: Ensure modules-enabled directory exists
  ansible.builtin.file:
    path: /etc/nginx/modules-enabled
    state: directory
    mode: "0755"

- name: Ensure NGINX stream module is loaded from correct path
  copy:
    dest: /etc/nginx/modules-enabled/50-stream.conf
    content: |
      load_module /etc/nginx/modules/ngx_stream_module.so;

- name: Ensure sites-available and sites-enabled directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - /etc/nginx/sites-available
    - /etc/nginx/sites-enabled

- name: Ensure NGINX is enabled and running
  ansible.builtin.service:
    name: nginx
    enabled: true
    state: started

- name: Deploy NGINX HTTP proxy configuration
  ansible.builtin.template:
    src: nginx_k3s_proxy.conf.j2
    dest: /etc/nginx/sites-available/k3s
    mode: "0644"

- name: Enable k3s HTTP site
  ansible.builtin.file:
    src: /etc/nginx/sites-available/k3s
    dest: /etc/nginx/sites-enabled/k3s
    state: link
    force: true

- name: Remove default site if enabled
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Create streams-enabled directory
  ansible.builtin.file:
    path: /etc/nginx/streams-enabled
    state: directory
    mode: "0755"

- name: Deploy NGINX stream passthrough config for HTTPS
  ansible.builtin.template:
    src: nginx_k3s_stream.conf.j2
    dest: /etc/nginx/streams-enabled/k3s-https.conf
    mode: "0644"

- name: Ensure NGINX includes stream configs
  ansible.builtin.lineinfile:
    path: /etc/nginx/nginx.conf
    insertafter: 'http {'
    line: '    include /etc/nginx/streams-enabled/*.conf;'
    state: present
    regexp: 'streams-enabled/\*\.conf'

- name: Reload NGINX
  ansible.builtin.service:
    name: nginx
    state: reloaded

#- name: Show current KUBECONFIG path
#  become: false
#  debug:
#    msg: "Using kubeconfig: {{ kubeconfig | default(lookup('env', 'HOME') ~ '/.kube/config') }}"
#  run_once: true
#  delegate_to: localhost
#
#- name: Try kube access manually in Ansible
#  command: kubectl get nodes
#  become: false
#  delegate_to: localhost
#  environment:
#    KUBECONFIG: "/Users/jschmidt/.kube/config"
#  register: kubectl_nodes
#  changed_when: false
#  failed_when: kubectl_nodes.rc != 0
#
#- name: Show node list from kubectl
#  become: true
#  debug:
#    var: kubectl_nodes.stdout
#  when: kubectl_nodes is defined

- name: Wait for Traefik service to be updated
  kubernetes.core.k8s_info:
    kind: Service
    namespace: kube-system
    name: traefik
    kubeconfig: "{{ kubeconfig | default(lookup('env', 'HOME') ~ '/.kube/config') }}"
  register: traefik_service_info
  until:
    - traefik_service_info is defined
    - traefik_service_info.resources is defined
    - traefik_service_info.resources | length > 0
    - 30080 in traefik_service_info.resources[0].spec.ports | map(attribute='nodePort') | list
    - 30443 in traefik_service_info.resources[0].spec.ports | map(attribute='nodePort') | list
  retries: 10
  delay: 6
  delegate_to: localhost
  become: false
  changed_when: false

